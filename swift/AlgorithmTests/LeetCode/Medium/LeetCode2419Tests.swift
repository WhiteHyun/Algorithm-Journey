//
//  LeetCode2419Tests.swift
//  AlgorithmTests
//
//  Created by 홍승현 on 2024/09/14.
//

import Testing

@Suite("2419. Longest Subarray With Maximum Bitwise AND", .tags(.array, .bitManipulation, .brainTeaser))
struct LeetCode2419Tests {
  private let problem = LeetCode2419()

  @Test(arguments: [
    ([1, 2, 3, 3, 2, 2], 2),
    ([1, 2, 3, 4], 1),
    ([1, 2, 3, 3, 7, 2, 2], 1),
    ([395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 395_808, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 153_490, 330_001, 330_001, 330_001, 330_001, 330_001, 330_001, 330_001, 37284, 470_030, 470_030, 470_030, 470_030, 470_030, 470_030, 156_542, 226_743], 24),
  ])
  func verifyAllTestCases(_ numbers: [Int], _ answer: Int) {
    let result = problem.longestSubarray(numbers)
    #expect(result == answer, #"Expected '\#(answer)', but got '\#(result)'"#)
  }
}
